{"ast":null,"code":"var _jsxFileName = \"/Users/dakshendrasingh/Documents/GitHub/kamyab_web/src/Feed.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport \"./Feed.css\";\nimport CreateIcon from '@material-ui/icons/Create';\nimport ImageIcon from '@material-ui/icons/Image';\nimport InputOption from './InputOption';\nimport CalendarViewDayIcon from '@material-ui/icons/CalendarViewDay';\nimport EventNoteIcon from '@material-ui/icons/EventNote';\nimport SubscriptionsIcon from '@material-ui/icons/Subscriptions';\nimport Post from './Post';\nimport { db } from './firebase';\nimport firebase from 'firebase';\nimport { useSelector } from 'react-redux';\nimport { selectUser } from './features/userSlice';\nimport FlipMove from \"react-flip-move\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Feed() {\n  _s();\n\n  const user = useSelector(selectUser);\n  const [input, setInput] = useState('');\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    db.collection(\"posts\").orderBy(\"timestamp\", \"desc\").onSnapshot(snapshot => setPosts(snapshot.docs.map(doc => ({\n      id: doc.id,\n      data: doc.data()\n    }))));\n  }, []);\n\n  function record() {\n    var recognition = new webkitSpeechRecognition();\n    recognition.lang = \"en-GB\";\n\n    recognition.onresult = function (event) {\n      // console.log(event);\n      document.getElementById('speechToText').value = event.results[0][0].transcript;\n    };\n\n    recognition.start();\n  }\n\n  const sendPost = e => {\n    e.preventDefault();\n    db.collection('posts').add({\n      name: user.displayName,\n      description: user.email,\n      message: input,\n      photoUrl: user.photoUrl || \"\",\n      timestamp: firebase.firestore.FieldValue.serverTimestamp()\n    });\n    setInput(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"feed\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"feed__inputContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"feed__input\",\n        children: [/*#__PURE__*/_jsxDEV(CreateIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            value: input,\n            onChange: e => setInput(e.target.value),\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 24\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: sendPost,\n            type: \"submit\",\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 24\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 20\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"feed__inputOptions\",\n        children: [/*#__PURE__*/_jsxDEV(InputOption, {\n          Icon: ImageIcon,\n          title: \"Photo\",\n          color: \"#70B5F9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(InputOption, {\n          Icon: SubscriptionsIcon,\n          title: \"Video\",\n          color: \"#E7A33E\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(InputOption, {\n          Icon: EventNoteIcon,\n          title: \"Event\",\n          color: \"#C0CBCD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(InputOption, {\n          Icon: CalendarViewDayIcon,\n          title: \"Write artical\",\n          color: \"#7FC15E\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FlipMove, {\n      children: posts.map(({\n        id,\n        data: {\n          name,\n          description,\n          message,\n          photoUrl\n        }\n      }) => /*#__PURE__*/_jsxDEV(Post, {\n        name: name,\n        description: description,\n        message: message,\n        photoUrl: photoUrl\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Feed, \"Qy79tzjCj85M8Cs6cxowfq9B35w=\", false, function () {\n  return [useSelector];\n});\n\n_c = Feed;\nexport default Feed;\n\nvar _c;\n\n$RefreshReg$(_c, \"Feed\");","map":{"version":3,"sources":["/Users/dakshendrasingh/Documents/GitHub/kamyab_web/src/Feed.js"],"names":["React","useEffect","useState","CreateIcon","ImageIcon","InputOption","CalendarViewDayIcon","EventNoteIcon","SubscriptionsIcon","Post","db","firebase","useSelector","selectUser","FlipMove","Feed","user","input","setInput","posts","setPosts","collection","orderBy","onSnapshot","snapshot","docs","map","doc","id","data","record","recognition","webkitSpeechRecognition","lang","onresult","event","document","getElementById","value","results","transcript","start","sendPost","e","preventDefault","add","name","displayName","description","email","message","photoUrl","timestamp","firestore","FieldValue","serverTimestamp","target"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport \"./Feed.css\";\nimport CreateIcon from '@material-ui/icons/Create';\nimport ImageIcon from '@material-ui/icons/Image';\nimport InputOption from './InputOption';\nimport  CalendarViewDayIcon  from '@material-ui/icons/CalendarViewDay';\nimport EventNoteIcon from '@material-ui/icons/EventNote';\nimport SubscriptionsIcon from '@material-ui/icons/Subscriptions';\nimport Post from './Post';\nimport { db } from './firebase';\nimport firebase from 'firebase';\nimport { useSelector } from 'react-redux';\nimport { selectUser } from './features/userSlice';\nimport FlipMove from \"react-flip-move\";\nfunction Feed() {\n    const user = useSelector(selectUser);\n    const [input,setInput]= useState('');\n    const [posts,setPosts]= useState([]);\n\n    useEffect(() => {\n        db.collection(\"posts\").orderBy(\"timestamp\",\"desc\").onSnapshot((snapshot) =>\n            setPosts(\n                snapshot.docs.map((doc) =>({\n                    id: doc.id,\n                    data: doc.data(),\n                }))\n            )\n        );\n    }, []);\n    function record() {\n        var recognition = new webkitSpeechRecognition();\n        recognition.lang = \"en-GB\";\n\n        recognition.onresult = function(event) {\n            // console.log(event);\n            document.getElementById('speechToText').value = event.results[0][0].transcript;\n        }\n        recognition.start();\n\n    }\n    const sendPost = e =>{\n        e.preventDefault();\n\n         db.collection('posts').add({\n             name: user.displayName,\n             description: user.email,\n             message: input,\n             photoUrl: user.photoUrl || \"\",\n             timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n\n         });\n         setInput(\"\");\n\n    };\n    return (\n        <div className='feed'>\n            <div className=\"feed__inputContainer\">\n               <div className=\"feed__input\">\n                   <CreateIcon />   \n                   <form>\n                       <input value={input }  onChange={e => setInput(e.target.value)} type=\"text\"/>\n                        \n                       <button onClick={sendPost} type ='submit' >Send</button>\n                   </form>\n                </div> \n                <div className=\"feed__inputOptions\">\n                    <InputOption Icon={ImageIcon} title='Photo' color='#70B5F9'/>\n                    <InputOption Icon={SubscriptionsIcon} title='Video' color='#E7A33E'/>\n                    <InputOption Icon={EventNoteIcon} title='Event' color='#C0CBCD'/>\n                    <InputOption Icon={CalendarViewDayIcon} title='Write artical' color='#7FC15E'/>\n                </div>\n            </div>\n\n            {/* posts */}\n            <FlipMove>\n            {posts.map(({id, data: {name,description,message,photoUrl} })=>(\n                <Post\n                key={id}\n                name={name}\n                description={description}\n                message={message}\n                photoUrl={photoUrl} \n                />\n            ))}\n            </FlipMove>\n        </div>\n    );\n}\n\nexport default Feed;\n"]},"metadata":{},"sourceType":"module"}